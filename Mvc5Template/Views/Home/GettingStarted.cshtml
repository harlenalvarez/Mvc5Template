
@{
    ViewBag.Title = "GettingStarted";
}
<div class="container">
    <h2>Getting Started</h2>
    <div>
        <!--Creating folders-->
        <fieldset>
            <legend>Create Dirs</legend>
            <ul>
                <li>App_Code - Root</li>
                <li>ViewModels - Root</li>
                <li>CustomValidation - Root.App_Code</li>
                <li>DataAccess - Root.App_Code</li>
                <li>App - Root.Scripts</li>
                <li>Less - Root.Content</li>
                <li>Css - Root.Content</li>
            </ul>
        </fieldset>

        <!--MySql Setup-->
        <fieldset>
            <legend>MySQL - Ignore if not using mysql</legend>
            <ol>
                <li>Add MySQL.Data</li>
                <li>Add MySQL.Data.Entity.EF6</li>
                <li>
                    Add connection to web.config in the Root Dir
                    <br />
                    <pre class="xml">
                    <code>
&lt;connectionStrings&gt;
    &lt;!-- Other connections --&gt;
    &lt;add name="ConnectionName" 
            providerName="MySql.Data.MySqlClient" 
            connectionString="Server=SERVER_NAME;
                              Database=DATABASE_NAME;
                              Uid=USER_NAME;Pwd=PASSWORD;" /&gt;
&lt;/connectionStrings&gt;
                    </code>
                </pre>
                    <br />
                    Add as many connections as needed
                </li>
                <li>
                    Comment out this line to remove SQL Server as default from web.config in the Root Dir
                    <br />
                    <pre class="xml">
                    <code>
&lt;defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" /&gt;
                    </code>
                </pre>
                </li>
                <li>
                    Create MySqlConfiguration.cs and MySqlHistoryContext.cs - Root.App_Code.DataAccess
                    <br />
                    <h4>MySqlConfiguration.cs</h4>
                    <pre class="cs"><code>
namespace App_Code.DataAccess
{
    class MySqlConfiguration : DbConfiguration
    {
        SetHistoryContext("MySql.Data.MySqlClient", (conn, schema)=>new MySqlHistoryContext(conn,schema));
    }
}
                    </code></pre>
                    <h4>MySqlHistoryContext.cs</h4>
                    <pre class="cs"><code>
namescape App_Code.DataAccess
{
    class MySqlHistoryContext : HistoryContext
    {
        public MySqlHistoryContext( DbConnection existingConnection, string defaultSchema):base(existingConnection, defaultSchema)
        {
        }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.Entity&lt;HistoryRow&gt;().Property(h => h.MigrationId).HasMaxLength(100).IsRequired();
            modelBuilder.Entity&lt;HistoryRow&gt;().Property(h => h.ContextKey).HasMaxLength(200).IsRequired();
        }
    }
}
                    </code></pre>
                </li>
                <li>
                    Add into the Application_Start method in Global.asax.cs
                    <br />
                    <pre class="cs"><code>
DbConfiguration.SetConfiguration(new MySqlEFConfiguration());
                    </code></pre>
                </li>
                <li>Add any property you want to add to the ApplicationUser class (Models.IdentityModel). - In my case I added UserAddress</li>
                <li>
                    Add Modify the ApplicationDbContext class (Models.IdentityModel)
                    <br />
                    <pre class="cs"><code>
public class ApplicationUser : IdentityUser
{
    public string UserAddress { get; set; } //Added UserAddress property
        
    public async Task&lt;ClaimsIdentity&gt; GenerateUserIdentityAsync(UserManager&lt;ApplicationUser&gt; manager)
    {
        // Note the authenticationType must match the one defined in CookieAuthenticationOptions.AuthenticationType
        var userIdentity = await manager.CreateIdentityAsync(this, DefaultAuthenticationTypes.ApplicationCookie);
        // Add custom user claims here
        return userIdentity;
    }
}
[DbConfigurationType(typeof(MySqlEFConfiguration))]//Added attribute
pulic class ApplicationDbContext : IdentityDbContext&lt;ApplicationUser&gt;
{
    public ApplicationDbContext() : base("SiteConnecion", throwIfV1Schema: false) //Added mysql connection name we added in the web.config
    {
    }
    public static ApplicationDbContext Create()
    {
        return new ApplicationDbContext();
    }
}
                    </code></pre>
                </li>
                <li>
                    Run enable-migrations in PMC (Package Manager Console)
                </li>
                <li>
                    Run add-migration InitialCreate in PMC
                </li>
            </ol>
            <em class="text-danger">Warning - if enable-migrations fails, uninstall EntityFramework using nuget and then re-install it.</em>
        </fieldset>

        <!--ELHMA Setup-->
        <fieldset>
            <legend>Error Login</legend>
            <ol>
                <li>Add ELHMA</li>
            </ol>
        </fieldset>

        <!--Add Compiler-->
        <fieldset>
            <legend>Client Side Compiler</legend>
            <ol>
                <li>Make sure web compiler vs extension is installed</li>
                <li>Add Bootstrap.less and remove Bootstrap.css using Nuget</li>
                <li>
                    Add into less site.less, main.less, dashboard.less,sidenav.less,variables.less.
                    <br />
                    <h4>main.less</h4>
                    <pre class="less">
<code>
body{
    padding-top: 3.5em;
    padding-bottom: 20px;
    &.dashboard-body{
        padding: 0 !important;
    }
}
footer{
    padding-left: 15px;
    padding-right: 15px;
}
/* Overriding bootstrap */
.container{
    &.dashboard{
        width:100%;
    }
}

/* Video bg */
.video-wrapper{
    width:100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    .fullscreen-bg { 
          position: absolute;
          top: 50%;
          left: 50%;
          min-width: 100%;
          min-height: 100%;
          width: auto;
          height: auto;
          z-index: 0;
          transform: translate(-50%, -50%);
          -webkit-transform: translate(-50%, -50%);
          -moz-transform: translate(-50%, -50%);
          -ms-transform:translate(-50%,-50%);
    }
    div{
        position: relative;
        z-index: 2;
    }
}
.presentation-pannel{
    width: 100%;
    height: 50vh;
    display: flex;
    flex-direction:column;
    justify-content:center;
    .overlay{
        position:absolute;
        top:0;
        left:0;
        width:100%;
        height: 100%;
        z-index:1;
        &.black{
            background-color:rgba(0,0,0,.7);
        }
        
    }
    *{
        color:white;
    }
}
/* Site css goes beyond this point */
</code>
</pre>
                    <br />
                    <h4>dashboard.less</h4>
                    <pre class="less">
<code>
/* Dashboard */
.dashboard-wrapper{
    margin-left: -15px;
    margin-right: -15px;
    display: flex;
    display: -ms-flexbox;
    height: 100%;
    min-height: @@dashboardWrapperMinHeight; /* see variables.less for height */
    .dashboard-toolbar{
        width:100%;
        height: 3em;
        border: 0;
        maring: 0;
        &.toolbar-border{
            border:0;
            border-bottom: 1px solid @@dashboardToolbarBorderColor; /* see variables.less for color */
        }
        &.toolbar-items-wrapper{
            margin: @@dashboardToolbarItemsWrapperMargin; /*see variables.less for margin */
        }
    }
    
    .dashboard-canvas-wrapper{
        width: 100%;
        background-color: @@dashboardCanvasWrapperBGColor; /* see variables.less for color */
        .dashboard-canvas{
            flex: 1;
            -ms-flex: 1;
            -webkit-flex: 1;
            padding: 1em;
            width: 100%;
            background-color: @@dashboardCanvasBGColor; /* see variables.less for color */
            height: 100%;
        }
    }    
}
.dashboard-inner-wrapper{
    width: 85vw;
    transition: width ease .5s;
    -webkit-transition: width ease .5s;
    -ms-transition: width ease .5s;
    -o-transition: width ease .5s;
    -moz-transition: width ease .5s;
}
.dashboard-timeline{
    width: 15vw;
    transition: width ease .5s;
    -webkit-transition: width ease .5s;
    -ms-transition: width ease .5s;
    -o-transition: width ease .5s;
    -moz-transition: width ease .5s;
}
/* XS Screens */
@@media
    only screen and (-webkit-min-device-pixel-ratio:3)      and (max-device-width:480px),
    only screen and (   -moz-min-device-pixel-ratio:3)      and (max-device-width:480px),
    only screen and (     -o-min-device-pixel-ratio:3/1)    and (max-device-width:480px),
    only screen and (        min-device-pixel-ratio:3)      and (max-device-width:480px),
    only screen and (-webkit-min-device-pixel-ratio:2)      and (max-device-width:480px),
    only screen and (   -moz-min-device-pixel-ratio:2)      and (max-device-width:480px),
    only screen and (     -o-min-device-pixel-ratio:2/1)    and (max-device-width:480px),
    only screen and (        min-device-pixel-ratio:2)      and (max-device-width:480px),
    only screen and (                min-resolution:192dpi) and (max-device-width:480px),
    only screen and (                min-resolution:2dppx)  and (max-device-width:480px),
    only screen and (max-width:480px){
        .dashboard-inner-wrapper{
            width: 100%;
            transition: width ease .5s;
            -webkit-transition: width ease .5s;
            -ms-transition: width ease .5s;
            -o-transition: width ease .5s;
            -moz-transition: width ease .5s;
        }
        
        .dashboard-timeline{
            width: 0;
            display: hidden;
            transition: width ease .5s;
            -webkit-transition: width ease .5s;
            -ms-transition: width ease .5s;
            -o-transition: width ease .5s;
            -moz-transition: width ease .5s;
        }
    }
</code>
</pre>
                    <br />
                    <h4>sidenav.less</h4>
                    <pre class="less">
<code>
    .sidenav-wrapper {
    width: 3.5em;
    line-height: 2em;
    background-color: @@sidenav-bg-color;
    overflow: hidden;
    color: @@sidenav-color;
    padding: 0;
    white-space: nowrap;
    transition: width .5s, margin-right .5s;
    -webkit-transition: width .5s, margin-right .5s;
    -moz-transition: width .5s, margin-right .5s;
    -o-transition: width .5s, margin-right .5s;
    transform: translateZ(0px);
    -webkit-transform: translateZ(0px);
    -moz-transform: translateZ(0px);
    position: relative;
    z-index: 2;
    &.sidenav-full {
        width: 20em;
        transition: width .5s, margin-right .5s;
        -webkit-transition: width .5s, margin-right .5s;
        -moz-transition: width .5s, margin-right .5s;
        -o-transition: width .5s, margin-right .5s;
        margin-right: -16.5em;
    }
   
    button {
        position:relative;
        padding: .5em;
        margin:.5em;
        background-color:transparent;
        background-image: none;
        border: 1px solid @@sidenav-color;
        border-radius: 4px;
        color: @@sidenav-color;
        .icon-bar {
            background-color:@@sidenav-color; 
            display: block;
            width: 1.5em;
            height: .15em;
            border-radius: 1px;
        }
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            border: 0;
        }
        .icon-bar+.icon-bar{
            margin-top:4px;
        }
    }
    ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
        li {
            cursor: pointer;
            text-align: left;
            padding: 0.5em;
            height: 3.5em;
            background-color: @@sidenav-item-bg-color;
            border: solid 1px 0 @@sidenav-item-border-color;
            border-right-style: none;
            border-left-style: none;
            border-bottom-style: none;
            &:first-child {
                border-top-style: none;
            }
            &:hover {
                background-color: @@sidenav-item-hover-bg-color;
                color: @@sidenav-item-hover-color;
            }
            &.active-link {
                color: @@sidenav-active-link-color;
                background-color: @@sidenav-active-link-bg-color;
            }
            span {
                cursor: pointer;
                font-size: 2.5em;
                margin: 0 .5em 0 0;
                text-decoration: none;
                vertical-align: middle;
            }
            a{
                text-decoration:none;
                color:inherit;
                &:hover{
                    color:inherit;
                }
                &:active{
                    color:inherit;
                }
            }
           
        }
    }
    hr{
        margin:0;
        border:0;
        border-top:1px solid @@sidenav-color;
    }
}
</code>
</pre>
                    <br />
                    <h4>variables.less</h4>
                    <pre class="less">
<code>
    
/*
    Primary Colors to replacle bootstrap dull colors
*/
@@defaultColor:#E6E6E6;
@@primaryColor:#2196F3;
@@successColor:#4CAF50;
@@infoColor:#9C27B0;
@@warningColor:#FF9800;
@@dangerColor:#E51C23;
/*
    Primary background, and border colors
*/
@@borderColor: #d7d7d7;
@@silverGrayColor:#F7F9F9;
@@beigeColor:#F2E8D6;
@@lightPrimaryColor:#2AB7FB;
/*
    Dashboard size and colors
*/
    @@dashboardWrapperMinHeight: 90vh;
    @@dashboardToolbarBorderColor: @@borderColor;
    @@dashboardToolbarItemsWrapperMargin: .5em;
    @@dashboardCanvasWrapperBGColor: #F0F0F0;
    @@dashboardCanvasBGColor: white;
/*
    Primary size of icons
*/
@@tableIconsFont:2em;
/*
    Side navigation variables
*/
@@sidenav-color: #F2F2EA;
@@sidenav-bg-color: #222222;
@@sidenav-item-bg-color: @@sidenav-bg-color;
@@sidenav-item-border-color: @@primaryColor;
@@sidenav-item-hover-bg-color: @@sidenav-color;
@@sidenav-item-hover-color:@@sidenav-bg-color;
@@sidenav-active-link-color:white;
@@sidenav-active-link-bg-color: #2AB7FB;
</code>
</pre>
                    <h4>site.less</h4>
                    <pre class="less">
<code>
@@import "variables.less";
@@import "main.less";
@@import "sidenav.less";
@@import "dashboard.less";
</code>
</pre>
                </li>
                <li>Right click any of the less files and you should see a web compile option. Run it to create the compilerconfig.json file and remove the css it create it.</li>
                <li>
                    Add to compilerconfig.json
                    <pre class="json">
                    <code>
[
    {
        "outputFile":"Content/Css/site.css",
        "inputFile":"Content/less/site.less"
    },
    {
        "outputFile":"Content/Css/bootstrap.css",
        "inputFile":"Content/bootstrap/bootstrap.less"
    }
]
                    </code>
                </pre>
                    <br />
                    You get the idea
                </li>
                <li>
                    Add Bootstrap.less and remove the css files
                </li>
            </ol>
        </fieldset>

        <!--Add Dashboard _Layout-->
        <fieldset>
            <legend>Layouts</legend>
            <ol>
                <li>
                    Edit _Layout.cshtml - Add the following to keep track of active tabs
                    <br />
                    <pre class="cs">
<code>
//Add to the very top
@@{
    string ControllerName = ViewContext.RouteData.Values["controller"].ToString().ToLower();
    string ActionName = ViewContext.RouteData.Values["action"].ToString().ToLower();
    //Now we set the active links or sublinks 
    string HomeLink = (ActionName == "index")?"active-link":"";
    string AboutLink = (ActionName == "about")?"active-link":"";
    string ContactLink = (ActionName == "contact")?"active-link":"";
    //You get the idea
    //Use the controller name if link has drop downs for the parent and action name for the selected child
}
</code>
</pre>
                    <em>This is file rather long so if you want the file download it from GIT</em>
                </li>

                <li>Add _DashboardLayout.cshtml (Download from <a href="https://github.com/harlenalvarez/Mvc5Template">GitHub</a> if you want it)</li>
            </ol>
        </fieldset>
    </div>
</div>

