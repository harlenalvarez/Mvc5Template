
@{
    ViewBag.Title = "Validation";
}

<h2>Validation</h2>
<div class="row">
    <div class="col-lg-4">
        <h2>Max Words Validation</h2>
        <em>Refer to @Html.ActionLink(linkText:"Script Validation",actionName:"Validation",controllerName:"") to render errors in the client side. </em>
    </div>
    <div class="col-lg-8">
        <pre class="c#">
            <code>
public class MaxWordsAttribute : ValidationAttribute
{
    private readonly int _maxWords;
    public MaxWordsAttribute(int maxWords):base("{0} has too many words.")
    {
        _maxWords = maxWords;   
    }
    protected override ValidationResult IsValid(object value, ValidationContext validationContext)
    {
        if(value != null)
        {
            string str = value.ToString();
            if(str.split(' ').Length > _maxWords)
            {
                var errorMessage = FormatErrorMessage(validationContext.DisplayName);
                return new ValidationResult(errorMessage);
            }
        }
        return ValidationResult.Success;
    }

    //This is for rendering client side error messages, requires jsquery unobtrusive and the js code
    public IEnumerable<ModelClientValidationRule> GetClientValidationRules(ModelMetadata metadata, ControllerContext context)
    {
        var rule = new ModelClientValidationRule();
        rule.ErrorMessage = FormatErrorMessage(name: metadata.GetDisplayName());
        rule.ValidationParameters.Add("wordcount", _maxWords);
        rule.ValidationType = "maxwords";
        yield return rule;
    }
}
            </code>
        </pre>
    </div>
</div>

